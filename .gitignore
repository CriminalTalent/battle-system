# ─────────────────────────────
# Dependencies
# ─────────────────────────────
node_modules/
**/node_modules/

# ─────────────────────────────
# Production builds / outputs
# ─────────────────────────────
build/
dist/
.out/

# ─────────────────────────────
# Environment variables (샘플은 유지)
# ─────────────────────────────
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
**/.env
**/.env.local
**/.env.development.local
**/.env.test.local
**/.env.production.local
!.env.example
!**/.env.example

# ─────────────────────────────
# Secrets / certificates (안전)
# ─────────────────────────────
*.pem
*.key
*.crt
*.pfx
*.p12
*.cer
*.der
*.jks
.ssh/
**/.ssh/

# ─────────────────────────────
# Runtime data / logs / pids
# ─────────────────────────────
logs/
pids/
*.pid
*.pid.lock
*.seed
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*
nohup.out
.node_repl_history

# 업로드(런타임 파일) — 정확 경로 명시
uploads/
**/uploads/
packages/battle-server/uploads/
packages/battle-server/public/uploads/

# PM2 (로컬에 생성될 수 있음)
.pm2/

# ─────────────────────────────
# Coverage
# ─────────────────────────────
coverage/
.nyc_output/
*.lcov

# ─────────────────────────────
# Caches / temp
# ─────────────────────────────
.cache/
.tmp/
tmp/
**/.cache/
**/.tmp/

# ESLint cache
.eslintcache

# ─────────────────────────────
# IDE / Editor
# ─────────────────────────────
.vscode/
.idea/
*.swp
*.swo

# ─────────────────────────────
# OS artifacts
# ─────────────────────────────
.DS_Store
Thumbs.db

# ─────────────────────────────
# Merge artifacts
# ─────────────────────────────
*.orig
*.rej

# ─────────────────────────────
# Deployment configs (레포 보관 불필요 시)
# ─────────────────────────────
# 배포 서버에만 두고 싶다면 아래 주석을 해제
# etc/nginx/
# **/ecosystem.local.config.js

# ─────────────────────────────
# Lockfiles (KEEP in repo)
# ─────────────────────────────
!package-lock.json
!yarn.lock
!pnpm-lock.yaml

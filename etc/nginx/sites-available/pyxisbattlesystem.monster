# /etc/nginx/sites-available/pyxisbattlesystem.monster

# ── WebSocket 업그레이드 헤더 매핑(HTTP 컨텍스트) ────────────────
#   ※ 이 파일은 http{} 블록 안에서 include 되므로 map 사용 가능
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# ── HTTP(80) → HTTPS 리다이렉트 + ACME HTTP-01 ────────────────
server {
    listen 80;
    listen [::]:80;
    server_name pyxisbattlesystem.monster;

    # Let’s Encrypt HTTP-01 챌린지 처리 (certbot webroot 사용 시)
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
        default_type "text/plain";
        access_log off;
    }

    # 헬스체크 (평문 http 용, 필요 시)
    location = /healthz {
        add_header Content-Type text/plain;
        return 200 "ok\n";
    }

    return 301 https://pyxisbattlesystem.monster$request_uri;
}

# ── HTTPS 메인 사이트 ───────────────────────────────────────────
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name pyxisbattlesystem.monster;

    # ── TLS ─────────────────────────────────────────────────────
    ssl_certificate           /etc/letsencrypt/live/pyxisbattlesystem.monster/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/pyxisbattlesystem.monster/privkey.pem;
    include                   /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_trusted_certificate   /etc/letsencrypt/live/pyxisbattlesystem.monster/chain.pem;

    # OCSP Stapling (권장)
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 1.1.1.1 1.0.0.1 valid=300s;
    resolver_timeout 5s;

    # ── 업로드 한도(서버 Node multer 5MB와 맞춤) ────────────────
    client_max_body_size 5m;

    # ── 보안/프라이버시 헤더 ───────────────────────────────────
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;
    add_header Cross-Origin-Opener-Policy same-origin always;
    add_header Cross-Origin-Resource-Policy same-site always;
    # 필요 시 CSP 추가:
    # add_header Content-Security-Policy "default-src 'self'" always;

    # ── 헬스체크(HTTPS) ────────────────────────────────────────
    location = /healthz {
        add_header Content-Type text/plain;
        return 200 "ok\n";
    }

    # ── 압축(서버 블록에서도 사용 가능) ─────────────────────────
    gzip on;
    gzip_comp_level 5;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
        application/json
        application/javascript
        application/x-javascript
        application/xml
        text/css
        text/javascript
        text/plain
        text/xml
        font/woff
        font/woff2;

    # 로그(선택)
    access_log /var/log/nginx/pyxisbattlesystem.access.log;
    error_log  /var/log/nginx/pyxisbattlesystem.error.log warn;

    # ── 기본: Node(Express:3001) 프록시 ─────────────────────────
    location / {
        proxy_pass http://127.0.0.1:3001;
        proxy_http_version 1.1;

        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Port  $server_port;

        # 일반 요청 타임아웃
        proxy_connect_timeout 5s;
        proxy_send_timeout    60s;
        proxy_read_timeout    60s;

        # 업그레이드 헤더가 섞여도 캐시 무시
        proxy_cache_bypass $http_upgrade;
    }

    # ── Socket.IO(WebSocket) 전용 ───────────────────────────────
    #  ※ 버퍼링 off, 업그레이드/커넥션 헤더 정확 전달
    location /socket.io/ {
        proxy_pass http://127.0.0.1:3001;
        proxy_http_version 1.1;

        proxy_set_header Upgrade            $http_upgrade;
        proxy_set_header Connection         $connection_upgrade;
        proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;

        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;

        proxy_read_timeout 300s;
        proxy_send_timeout 300s;

        proxy_buffering off;
    }

    # 50x 오류 페이지(선택)
    error_page 500 502 503 504 /50x.html;
    location = /50x.html { return 500 "Server error\n"; }
}
